'use client';
'use strict';

var jsxRuntime = require('react/jsx-runtime');
var react = require('@tiptap/react');
var core = require('@mantine/core');
var RichTextEditor_context = require('../RichTextEditor.context.cjs');
var RichTextEditor_module = require('../RichTextEditor.module.css.cjs');

const defaultProps = {};
const RichTextEditorContent = core.factory((_props, ref) => {
  const props = core.useProps("RichTextEditorContent", defaultProps, _props);
  const { classNames, className, style, styles, vars, ...others } = props;
  const ctx = RichTextEditor_context.useRichTextEditorContext();
  if (ctx.withTypographyStyles) {
    return /* @__PURE__ */ jsxRuntime.jsx(
      core.TypographyStylesProvider,
      {
        ...ctx.getStyles("typographyStylesProvider", { className, style, styles, classNames }),
        unstyled: ctx.unstyled,
        ref,
        children: /* @__PURE__ */ jsxRuntime.jsx(
          core.Box,
          {
            component: react.EditorContent,
            editor: ctx.editor,
            ...ctx.getStyles("content", { classNames, styles }),
            ...others
          }
        )
      }
    );
  }
  return /* @__PURE__ */ jsxRuntime.jsx(
    core.Box,
    {
      component: react.EditorContent,
      editor: ctx.editor,
      ...ctx.getStyles("content", { classNames, styles, className, style }),
      ...others
    }
  );
});
RichTextEditorContent.classes = RichTextEditor_module;
RichTextEditorContent.displayName = "@mantine/tiptap/RichTextEditorContent";

exports.RichTextEditorContent = RichTextEditorContent;
//# sourceMappingURL=RichTextEditorContent.cjs.map
