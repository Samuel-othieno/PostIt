import { LegendProps, PolarAngleAxisProps, PolarGridProps, PolarRadiusAxisProps, RadarProps, RadarChart as ReChartsRadarChart } from 'recharts';
import { BoxProps, ElementProps, Factory, MantineColor, StylesApiProps } from '@mantine/core';
export interface RadarChartSeries {
    name: string;
    color: MantineColor;
    strokeColor?: MantineColor;
    opacity?: number;
}
export type RadarChartStylesNames = 'root' | 'container';
export type RadarChartCssVariables = {
    root: '--chart-grid-color' | '--chart-text-color';
};
export interface RadarChartProps extends BoxProps, StylesApiProps<RadarChartFactory>, ElementProps<'div'> {
    /** Data used in the chart */
    data: Record<string, any>[];
    /** Determines which data should be consumed from the `data` array. */
    series: RadarChartSeries[];
    /** Key of the `data` object for axis values */
    dataKey: string;
    /** Controls color of the grid lines. By default, color depends on the color scheme. */
    gridColor?: MantineColor;
    /** Controls color of all text elements. By default, color depends on the color scheme. */
    textColor?: MantineColor;
    /** Determines whether PolarGrid component should be displayed, `true` by default. */
    withPolarGrid?: boolean;
    /** Determines whether PolarAngleAxis component should be displayed, `true` by default */
    withPolarAngleAxis?: boolean;
    /** Determines whether PolarRadiusAxisProps component should be displayed, `false` by default */
    withPolarRadiusAxis?: boolean;
    /** Props passed down to recharts Radar component */
    radarProps?: ((series: RadarChartSeries) => Omit<RadarProps, 'ref'>) | Omit<RadarProps, 'ref'>;
    /** Props passed down to recharts RadarChart component */
    radarChartProps?: React.ComponentPropsWithoutRef<typeof ReChartsRadarChart>;
    /** Props passed down to recharts PolarGrid component */
    polarGridProps?: Omit<PolarGridProps, 'ref'>;
    /** Props passed down to recharts PolarAngleAxis component */
    polarAngleAxisProps?: Omit<PolarAngleAxisProps, 'ref'>;
    /** Props passed down to recharts PolarRadiusAxis component */
    polarRadiusAxisProps?: Omit<PolarRadiusAxisProps, 'ref'>;
    /** Props passed down to recharts Legend component */
    legendProps?: Omit<LegendProps, 'ref'>;
    /** Determines whether the legend should be displayed, `false` by default */
    withLegend?: boolean;
    /** Additional components that are rendered inside recharts `RadarChart` component */
    children?: React.ReactNode;
}
export type RadarChartFactory = Factory<{
    props: RadarChartProps;
    ref: HTMLDivElement;
    stylesNames: RadarChartStylesNames;
    vars: RadarChartCssVariables;
}>;
export declare const RadarChart: import("@mantine/core").MantineComponent<{
    props: RadarChartProps;
    ref: HTMLDivElement;
    stylesNames: RadarChartStylesNames;
    vars: RadarChartCssVariables;
}>;
