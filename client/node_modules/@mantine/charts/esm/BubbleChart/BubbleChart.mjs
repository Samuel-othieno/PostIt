'use client';
import { jsx, jsxs } from 'react/jsx-runtime';
import { ResponsiveContainer, ScatterChart, XAxis, YAxis, ZAxis, Tooltip, Scatter } from 'recharts';
import { createVarsResolver, getThemeColor, factory, useProps, useMantineTheme, useStyles, Box, Group, Text } from '@mantine/core';
import classes from '../grid-chart.module.css.mjs';

function getDomain(data, key) {
  const values = data.map((item) => item[key]);
  return [Math.min(...values), Math.max(...values)];
}
function BubbleChartTooltip({
  active,
  payload,
  getStyles,
  dataKey,
  valueFormatter
}) {
  if (active && payload && payload.length) {
    const data = payload[0] && payload[0].payload;
    return /* @__PURE__ */ jsx("div", { ...getStyles("tooltip"), children: /* @__PURE__ */ jsxs(Group, { justify: "space-between", children: [
      /* @__PURE__ */ jsx(Text, { fz: "sm", children: data[dataKey.x] }),
      /* @__PURE__ */ jsx(Text, { fz: "sm", children: valueFormatter ? valueFormatter(data[dataKey.z]) : data[dataKey.z] })
    ] }) });
  }
  return null;
}
const defaultProps = {
  color: "blue.6",
  withTooltip: true
};
const varsResolver = createVarsResolver((theme, { textColor, gridColor }) => ({
  root: {
    "--chart-text-color": textColor ? getThemeColor(textColor, theme) : void 0,
    "--chart-grid-color": gridColor ? getThemeColor(gridColor, theme) : void 0
  }
}));
const BubbleChart = factory((_props, ref) => {
  const props = useProps("BubbleChart", defaultProps, _props);
  const {
    classNames,
    className,
    style,
    styles,
    unstyled,
    vars,
    data,
    xAxisProps,
    yAxisProps,
    zAxisProps,
    tooltipProps,
    scatterProps,
    color,
    label,
    withTooltip,
    dataKey,
    range,
    valueFormatter,
    ...others
  } = props;
  const theme = useMantineTheme();
  const getStyles = useStyles({
    name: "BubbleChart",
    classes,
    props,
    className,
    style,
    classNames,
    styles,
    unstyled,
    vars,
    varsResolver
  });
  return /* @__PURE__ */ jsx(Box, { ref, ...getStyles("root"), ...others, children: /* @__PURE__ */ jsx(ResponsiveContainer, { children: /* @__PURE__ */ jsxs(ScatterChart, { children: [
    /* @__PURE__ */ jsx(
      XAxis,
      {
        type: "category",
        dataKey: dataKey.x,
        interval: 0,
        tick: { fontSize: 12, fill: "currentColor" },
        tickLine: { transform: "translate(0, -6)", stroke: "currentColor" },
        stroke: "currentColor",
        ...getStyles("axis"),
        ...xAxisProps
      }
    ),
    /* @__PURE__ */ jsx(
      YAxis,
      {
        type: "number",
        dataKey: dataKey.y,
        height: 10,
        width: label ? void 0 : 0,
        tick: false,
        tickLine: false,
        axisLine: false,
        label: { value: label, position: "insideRight", fontSize: 12, fill: "currentColor" },
        ...getStyles("axis"),
        ...yAxisProps
      }
    ),
    /* @__PURE__ */ jsx(
      ZAxis,
      {
        type: "number",
        dataKey: dataKey.z,
        domain: getDomain(data, dataKey.z),
        range,
        ...zAxisProps
      }
    ),
    withTooltip && /* @__PURE__ */ jsx(
      Tooltip,
      {
        animationDuration: 100,
        isAnimationActive: false,
        cursor: { stroke: "var(--chart-grid-color)", strokeWidth: 1, strokeDasharray: "3 3" },
        content: (payload) => /* @__PURE__ */ jsx(
          BubbleChartTooltip,
          {
            dataKey,
            active: payload.active,
            payload: payload.payload,
            getStyles,
            valueFormatter
          }
        ),
        ...tooltipProps
      }
    ),
    /* @__PURE__ */ jsx(
      Scatter,
      {
        data,
        fill: getThemeColor(color, theme),
        isAnimationActive: false,
        ...scatterProps
      }
    )
  ] }) }) });
});
BubbleChart.displayName = "@mantine/charts/BubbleChart";
BubbleChart.classes = classes;

export { BubbleChart };
//# sourceMappingURL=BubbleChart.mjs.map
