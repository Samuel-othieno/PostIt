'use client';
import { jsxs, jsx } from 'react/jsx-runtime';
import { factory, useProps, useStyles, ColorSwatch, Box } from '@mantine/core';
import { getSeriesLabels } from '../utils/get-series-labels/get-series-labels.mjs';
import classes from './ChartLegend.module.css.mjs';

function updateChartLegendPayload(payload) {
  return payload.map((item) => {
    const newDataKey = item.dataKey.split(".").pop();
    return {
      ...item,
      dataKey: newDataKey,
      payload: {
        ...item.payload,
        name: newDataKey,
        dataKey: newDataKey
      }
    };
  });
}
function getFilteredChartLegendPayload(payload) {
  return updateChartLegendPayload(payload.filter((item) => item.color !== "none"));
}
const defaultProps = {};
const ChartLegend = factory((_props, ref) => {
  const props = useProps("ChartLegend", defaultProps, _props);
  const {
    classNames,
    className,
    style,
    styles,
    unstyled,
    vars,
    payload,
    onHighlight,
    legendPosition,
    mod,
    series,
    showColor,
    centered,
    ...others
  } = props;
  const getStyles = useStyles({
    name: "ChartLegend",
    classes,
    props,
    className,
    style,
    classNames,
    styles,
    unstyled
  });
  if (!payload) {
    return null;
  }
  const filteredPayload = getFilteredChartLegendPayload(payload);
  const labels = getSeriesLabels(series);
  const items = filteredPayload.map((item, index) => /* @__PURE__ */ jsxs(
    "div",
    {
      ...getStyles("legendItem"),
      onMouseEnter: () => onHighlight(item.dataKey),
      onMouseLeave: () => onHighlight(null),
      "data-without-color": showColor === false || void 0,
      children: [
        /* @__PURE__ */ jsx(
          ColorSwatch,
          {
            color: item.color,
            size: 12,
            ...getStyles("legendItemColor"),
            withShadow: false
          }
        ),
        /* @__PURE__ */ jsx("p", { ...getStyles("legendItemName"), children: labels[item.dataKey] || item.dataKey })
      ]
    },
    index
  ));
  return /* @__PURE__ */ jsx(
    Box,
    {
      ref,
      mod: [{ position: legendPosition, centered }, mod],
      ...getStyles("legend"),
      ...others,
      children: items
    }
  );
});
ChartLegend.displayName = "@mantine/charts/ChartLegend";

export { ChartLegend, getFilteredChartLegendPayload };
//# sourceMappingURL=ChartLegend.mjs.map
