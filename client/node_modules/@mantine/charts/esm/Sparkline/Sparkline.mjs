'use client';
import { jsx, jsxs } from 'react/jsx-runtime';
import { useId, useMemo } from 'react';
import { ResponsiveContainer, AreaChart, Area } from 'recharts';
import { createVarsResolver, getThemeColor, factory, useProps, useStyles, Box } from '@mantine/core';
import '../AreaChart/AreaChart.mjs';
import { AreaGradient } from '../AreaChart/AreaGradient.mjs';

const classes = {};
const defaultProps = {
  withGradient: true,
  connectNulls: true,
  fillOpacity: 0.6,
  strokeWidth: 2,
  curveType: "linear"
};
function getTrendColor(data, trendColors) {
  const first = data[0];
  const last = data[data.length - 1];
  if (first === null || last === null) {
    return trendColors.neutral || trendColors.positive;
  }
  if (first < last) {
    return trendColors.positive;
  }
  if (first > last) {
    return trendColors.negative;
  }
  return trendColors.neutral || trendColors.positive;
}
const varsResolver = createVarsResolver(
  (theme, { color, data, trendColors }) => ({
    root: {
      "--chart-color": trendColors ? getThemeColor(getTrendColor(data, trendColors), theme) : color ? getThemeColor(color, theme) : void 0
    }
  })
);
const Sparkline = factory((_props, ref) => {
  const props = useProps("Sparkline", defaultProps, _props);
  const {
    classNames,
    className,
    style,
    styles,
    unstyled,
    vars,
    data,
    withGradient,
    fillOpacity,
    curveType,
    strokeWidth,
    trendColors,
    connectNulls,
    areaProps,
    ...others
  } = props;
  const getStyles = useStyles({
    name: "Sparkline",
    classes,
    props,
    className,
    style,
    classNames,
    styles,
    unstyled,
    vars,
    varsResolver
  });
  const id = useId();
  const mappedData = useMemo(() => data.map((value, index) => ({ value, index })), [data]);
  return /* @__PURE__ */ jsx(Box, { ref, ...getStyles("root"), ...others, dir: "ltr", children: /* @__PURE__ */ jsx(ResponsiveContainer, { children: /* @__PURE__ */ jsxs(AreaChart, { data: mappedData, children: [
    /* @__PURE__ */ jsx(
      Area,
      {
        dataKey: "value",
        type: curveType,
        fill: `url(#${id})`,
        stroke: "var(--chart-color, var(--mantine-color-blue-filled))",
        isAnimationActive: false,
        connectNulls,
        strokeWidth,
        fillOpacity: 1,
        ...areaProps
      }
    ),
    /* @__PURE__ */ jsx("defs", { children: /* @__PURE__ */ jsx(
      AreaGradient,
      {
        id,
        color: "var(--chart-color, var(--mantine-color-blue-filled))",
        fillOpacity,
        withGradient
      }
    ) })
  ] }) }) });
});
Sparkline.displayName = "@mantine/charts/Sparkline";
Sparkline.classes = classes;

export { Sparkline };
//# sourceMappingURL=Sparkline.mjs.map
